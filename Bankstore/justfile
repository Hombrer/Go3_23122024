set dotenv-path := "./app.env"
set dotenv-load


# Create postgres container
pg_up:
    docker compose up -d

# Remove postgres container
pg_down:
    docker compose down

# Start postgres db service
pg_start:
    docker compose start

# Stop postgres db service
pg_stop:
    docker compose stop

# Create bankdb
createdb:
    docker compose exec db createdb --username=$POSTGRES_USER --owner=$POSTGRES_USER bankdb

# Drop bankdb:
dropdb:
    docker compose exec db dropdb -U $POSTGRES_USER bankdb

# Apply migration to create all tables
migrateup:
    migrate -path db/migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/bankdb?sslmode=disable" up

# Apply only one migration
migrateup1:
    migrate -path db/migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/bankdb?sslmode=disable" -verbose up 1

# Apply all migration to delete tables
migratedown:
    migrate -path db/migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/bankdb?sslmode=disable" down 

# Apply only one migration to delete 
migratedown1:
    migrate -path db/migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/bankdb?sslmode=disable" -verbose down 1      

# Generate code
sqlc:
    sqlc generate

# Testing code
test:
    go test -v -cover -timeout 180s ./... -count=1

# Start server
server:
    go run main.go